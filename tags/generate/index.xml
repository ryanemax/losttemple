<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generate on 刘雨飏@ANAS联盟</title>
    <link>https://ryanemax.github.io/tags/generate/</link>
    <description>Recent content in Generate on 刘雨飏@ANAS联盟</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©2007-2016 Ryn&#39;s Blog</copyright>
    <lastBuildDate>Sat, 07 May 2016 13:00:00 +0800</lastBuildDate>
    <atom:link href="https://ryanemax.github.io/tags/generate/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ionic命令行Generate体验总结</title>
      <link>https://ryanemax.github.io/cookbook/frontend/ionic2-generate/</link>
      <pubDate>Sat, 07 May 2016 13:00:00 +0800</pubDate>
      
      <guid>https://ryanemax.github.io/cookbook/frontend/ionic2-generate/</guid>
      <description>

&lt;h1 id=&#34;ionic命令行generate体验总结:d353d7a4dc5d188b654539144676ccdb&#34;&gt;ionic命令行Generate体验总结&lt;/h1&gt;

&lt;h1 id=&#34;工具简述-description:d353d7a4dc5d188b654539144676ccdb&#34;&gt;工具简述 Description&lt;/h1&gt;

&lt;p&gt;Ionic now provides a generator function to create pages and services for your app. This makes going from a basic app to a full featured app with navigation much easier.&lt;/p&gt;

&lt;p&gt;To create a page you can use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# ionic g page &amp;lt;PageName&amp;gt;
ionic g page MyAboutPage

√ Create app/pages/my-about-page/my-about-page.html
√ Create app/pages/my-about-page/my-about-page.js
√ Create app/pages/my-about-page/my-about-page.scss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will give you a html file, sass file, and a js file with your component definition.&lt;/p&gt;

&lt;p&gt;To create a service, you can replace page with provider:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ionic g provider MyData

√ Create app/pages/my-data/my-data.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a standard class with a simple http get request using Angular’s http class.&lt;/p&gt;

&lt;h1 id=&#34;命名规范-a-quick-note-on-naming-conventions:d353d7a4dc5d188b654539144676ccdb&#34;&gt;命名规范 A quick note on naming conventions&lt;/h1&gt;

&lt;p&gt;Ionic 2 uses kebob-casing for file names (&lt;strong&gt;my-about-page.html&lt;/strong&gt;) and css classes (&lt;strong&gt;.my-about-page&lt;/strong&gt;), and uses PascalCasing for JavaScript classes in ES6/TypeScript (&lt;strong&gt;MyAboutPage&lt;/strong&gt;). Using this convention, developers can pick up any Ionic 2 project and quickly become productive, similar to Rails.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;目录名称 /app/pages/my-about-page/&lt;/li&gt;
&lt;li&gt;文件名称 my-about-page.html&lt;/li&gt;
&lt;li&gt;scss样式 .myaboutpage&lt;/li&gt;
&lt;li&gt;Class名称 MyAboutPage&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>