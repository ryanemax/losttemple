<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>刘雨飏@ANAS联盟</title>
    <link>https://cio.anasit.com/tags/openwrt/index.xml</link>
    <description>Recent content on 刘雨飏@ANAS联盟</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©2007-2016 Ryn&#39;s Blog</copyright>
    <atom:link href="https://cio.anasit.com/tags/openwrt/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OpenWrt&#43;OpenVPN穿透及公司虚拟私有网关搭建</title>
      <link>https://cio.anasit.com/cookbook/network/OpenWrt&#43;OpenVPN%E7%A9%BF%E9%80%8F%E5%8F%8A%E5%85%AC%E5%8F%B8%E8%99%9A%E6%8B%9F%E7%A7%81%E6%9C%89%E7%BD%91%E5%85%B3%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 21 Oct 2015 15:05:51 +0800</pubDate>
      
      <guid>https://cio.anasit.com/cookbook/network/OpenWrt&#43;OpenVPN%E7%A9%BF%E9%80%8F%E5%8F%8A%E5%85%AC%E5%8F%B8%E8%99%9A%E6%8B%9F%E7%A7%81%E6%9C%89%E7%BD%91%E5%85%B3%E6%90%AD%E5%BB%BA/</guid>
      <description>

&lt;h1 id=&#34;openwrt-openvpn穿透及公司虚拟私有网关搭建&#34;&gt;《OpenWrt+OpenVPN穿透及公司虚拟私有网关搭建》&lt;/h1&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;h2 id=&#34;更多实用的案例参考&#34;&gt;更多实用的案例参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.linuxfly.org/post/86/&#34;&gt;http://www.linuxfly.org/post/86/&lt;/a&gt;
- 客户端权限组及定制配置
- 服务端客户端内网互通 &lt;a href=&#34;http://blog.ltns.info/linux/connect_two_home_networks_using_openvpn_and_openwrt/&#34;&gt;http://blog.ltns.info/linux/connect_two_home_networks_using_openvpn_and_openwrt/&lt;/a&gt;
- 内部DHCP及DNS服务
- 服务端代理客户端证书，客户端只需帐号密码
- 代理
- 安全性&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.linuxfly.org/post/84/&#34;&gt;http://www.linuxfly.org/post/84/&lt;/a&gt;
- Linux做服务端&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.linuxfly.org/post/85/&#34;&gt;http://www.linuxfly.org/post/85/&lt;/a&gt;
- Windows做客户端&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jqian.net/post/openwrt-openvpn.html&#34;&gt;http://blog.jqian.net/post/openwrt-openvpn.html&lt;/a&gt;
- OpenWRT 做客户端&lt;/p&gt;

&lt;h2 id=&#34;faq1-无法登陆提示tls错误&#34;&gt;FAQ1.无法登陆提示TLS错误&lt;/h2&gt;

&lt;p&gt;客户端、服务端认证cert文件时间不对称，重新生成即可&lt;/p&gt;

&lt;h2 id=&#34;faq2-只能访问vpn-server-不能访问server外的设备&#34;&gt;FAQ2.只能访问VPN Server，不能访问Server外的设备&lt;/h2&gt;

&lt;p&gt;通过nat解决
虽然有的资料说通过正确设置路由表并打开ip_forward就可以了，但在我的server上，虽然的确是有net:10.7.0.0/24,gw:10.8.1.2这个路由的（默认就有的），却仍然不能正常工作（除非是我的理解有误，需要的是另外一条路由设置），所以最后还是通过nat解决的（毕竟vpn的ip不属于本地子网，单纯的ip转发应该是没有用的）。&lt;/p&gt;

&lt;h2 id=&#34;faq3-可以vpn到server-但server和client互相ping不通&#34;&gt;FAQ3.可以VPN到Server，但Server和Client互相ping不通。&lt;/h2&gt;

&lt;h3 id=&#34;openwrt特殊情况&#34;&gt;OpenWRT特殊情况&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-openwrt&#34;&gt;## FAQ1:端口转发无效
# 1.添加网络-防火墙-通信规则-打开对应路由端口
# 2.防火墙-端口转发-添加转发规则
# 3.配置成功之后仍然无效：开启openwrt系统路由功能
echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/ip_forward
#为了让这个设置重启也好用，我们编辑 /etc/sysctl.conf:
vim /etc/sysctl.conf
#编辑这行:
#net.ipv4.ip_forward=1
#把&amp;quot;#&amp;quot;删了:
net.ipv4.ip_forward=1
# 重启network、firewall，然后重启路由器
/etc/init.d/network restart
/etc/init.d/firewall restart
# 4.转发成功，但只可外网访问，内网被拒绝

## FAQ2:登录vpn后ping不通
# 1.(错误，应该新建一个tun接口，无配置协议，物理并入tun0)OpenWrt看看网络接口，lan口的物理设置，其中应该有个“tap0”，有没有打勾，并入lan
# 2./etc/config/network增加内容
config interface &#39;tun&#39;
        option ifname &#39;tun0&#39;
        option proto &#39;none&#39;
# 3./etc/config/firewall增加内容
config zone
        option name &#39;tun&#39;
        option input &#39;ACCEPT&#39;
        option output &#39;ACCEPT&#39;
        option forward &#39;REJECT&#39;

config forwarding
        option src &#39;lan&#39;
        option dest &#39;tun&#39;
        option mtu_fix &#39;0&#39;

config forwarding
        option src &#39;tun&#39;
        option dest &#39;lan&#39;
        option mtu_fix &#39;0&#39;
# （确认不必要）4./etc/firewall.user增加内容
iptables -I INPUT -i tun0 -j ACCEPT
iptables -I OUTPUT -o tun0 -j ACCEPT
iptables -I FORWARD -i tun0 -j ACCEPT
iptables -I FORWARD -o tun0 -j ACCEPT

## FAQ3:(FAQ2中出错了，纯净的环境是不存在这个问题的)openwrt可以ping通10.7.0.1，内网其他设备无法ping通，转发端口无法访问
0.关闭防火墙的“启用SYN-flood防御”
# 1.网络-防火墙-转发规则-添加转发到tun的规则
添加tun 192.168.99.1 22，远程SSH可用
添加tun 192.168.99.181 8001，WEB8001仍然出错
# 2.(未验证)真是原因是内网机器上没有返回给vpn的包导致一直不通，在内网被连接的机器上添加如下路由
route add -net 10.7.0.0/24 gw 192.168.99.1 #linux
route add 10.7.0.0 mask 255.255.0.0 192.168.99.1 #win
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;详细方案&#34;&gt;详细方案&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/zubin006/article/details/4544684&#34;&gt;http://blog.csdn.net/zubin006/article/details/4544684&lt;/a&gt;
&lt;strong&gt;问题排查&lt;/strong&gt;
1.客户端版本（系统、软件）问题排查：无
2.客户端conf配置排查：无
3.服务端conf配置排查：无
4.C/A问题：无
5.route路由问题，没有通向vpn内网的转发路由：&lt;strong&gt;是&lt;/strong&gt;
&lt;strong&gt;解决探索&lt;/strong&gt;
正常与出错的环境，都拨上VPN，route print一看，社区的机是没有10.7.0.0/24（也就是OpenVPN的子网IP）的路由的。
用ipconfig可以看到，获得的IP是 10.7.0.6，网关是10.7.0.5，于是手动执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## Linux或OpenWrt
route add -net 10.0.0.0 netmask 255.0.0.0 gw 10.7.0.5
失败：route: SIOCADDRT: File exists，路由已存在
解决：server.conf少了句 push &amp;quot;route 10.7.0.0 255.255.0.0&amp;quot;
## Windows cmd/powershell 管理员模式
route add 10.0.0.0 mask 255.0.0.0 10.7.0.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再ping 10.7.0.1，已经通了。服务器与社区设备，互相可以ping通，看起来一切都正常了。 　　&lt;/p&gt;

&lt;p&gt;不过到底为什么会出现这样的问题呢？后来仔细看了一下log，看到这３条： Tue Apr 18 19:07:45 2006 route ADD 10.7.0.0 MASK 255.255.0.0 10.7.0.5 Tue Apr 18 19:07:45 2006 ROUTE: route addition failed using CreateIpForwardEntry: 参数不正确。 [if_index=65541] Tue Apr 18 19:07:45 2006 Route addition via IPAPI failed&lt;/p&gt;

&lt;p&gt;显然，OpenVPN是有尝试添加这条路由的，但由于某种原因失败了。&lt;/p&gt;

&lt;p&gt;在默认设置下，似乎OpenVPN会自动判断添加路由的时机(可能是 TEST ROUTES: 0/0 succeeded len=1 ret=0 a=0 u/d=down&amp;hellip;那几条)，然后再添加路由。&lt;/p&gt;

&lt;p&gt;这种机制在公司的机可以正常工作，但在社区的机却失败了，在OpenVPN认为已经可以添加路由的时候，实际上系统还没做好准备（我后来写了个批处理，先ipconfig/all然后route print然后再route add，在配置文件中使用route-up这个directive来执行它，然后在log中查看结果。可以看到，即使路由表里已经有10.7.0.x的路由，接下来的route add还是加不进去）。&lt;/p&gt;

&lt;p&gt;还好，OpenVPN提供了一个route-delay，用这个directive可以强行指定添加路由前的延时。经过实验，在我这里需要设置成route-delay 10（10秒）才可以添加路由。等待时状态窗口会停在&amp;rdquo;FlushIpNetTable&amp;rdquo;的状态，这时也可以自己cmd尝试手工添加路由，同样也会受到系统的拒绝。10秒过后，OpenVPN会添加路由，察看log也可以看到已经不会出错了。&lt;/p&gt;

&lt;p&gt;但问题没有解决。用route print，还是没看到那条路由，而如果在配置文件中加多一条route 10.7.0.0 255.255.0.0，可以在log中看到OpenVPN连续执行了两次route add，第一次成功，第二次显示路由已存在。&lt;/p&gt;

&lt;p&gt;然后连接完成后，route print还是看不到。真是比较奇怪。
&lt;strong&gt;最终方案&lt;/strong&gt;
在server.conf/server.ovpn添加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;# 方法一：管理员模式启动
# 方法二：新增route-method exe
## Fix Windows Can&#39;t Ping
route-method exe
# 方法三：服务端写ipp固定ip 10.7.0.8，客户端添加永久路由（固定地址+1：10.7.0.9）
route add 10.0.0.0 mask 255.0.0.0 10.7.0.9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;遗憾的是，这里必须把10.7.0.5这个VPN Gateway的IP写进去，而在某些情况下，可能没办法是先确定这个IP。&lt;/p&gt;

&lt;p&gt;（补充：后来再读了一下manpage，发现有这个directive： &amp;ndash;route-method m Which method m to use for adding routes on Windows? adaptive (default) &amp;ndash; Try IP helper API first. If that fails, fall back to the route.exe shell command. ipapi &amp;ndash; Use IP helper API. exe &amp;ndash; Call the route.exe shell command. 也就是说，可以不用route-up那句，改成route-method exe，效果是一样的，而且更具通用性） 　　总的来说，对于Openvpn，排除防火墙的因素，问题往往很有可能出在路由上，其次就是nat。配置Openvpn必须要对这两个东西保持清醒才行。&lt;/p&gt;

&lt;h2 id=&#34;faq4-ssh免密码-密钥登录&#34;&gt;FAQ4.SSH免密码，密钥登录&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/etc/dropbear/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;一-openvpn介绍&#34;&gt;一、OpenVPN介绍&lt;/h1&gt;

&lt;h2 id=&#34;openvpn&#34;&gt;OpenVPN&lt;/h2&gt;

&lt;p&gt;VPN即虚拟子网，用于跨越互联网构建虚拟的局域网，普遍用于公司网络管理、跨域设备管理等场景。
Windows自带的pptp更加简易，而跨平台的openvpn更加通用、安全。&lt;/p&gt;

&lt;h2 id=&#34;openwrt-luci&#34;&gt;openwrt/luci&lt;/h2&gt;

&lt;p&gt;openwrt用于智能路由器的嵌入式操作系统，用opkg进行包管理，精简功能完善，带有管理的web端。
luci则深度优化了web管理端，实现了Linux软件的web管理工作。
提供多样的模板luci-theme、应用luci-app及定制的规范。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FreeRouter_V2(自带OpenVPN)
一个适用于OpenWRT的全平台翻墙路由方案
&lt;a href=&#34;http://www.lifetyper.com&#34;&gt;http://www.lifetyper.com&lt;/a&gt;
&lt;a href=&#34;https://github.com/lifetyper/FreeRouter_V2&#34;&gt;https://github.com/lifetyper/FreeRouter_V2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PandoraBox
PandoraBox 是基于OpenWrt 14.09二次开发的路由器系统.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;openwrt下的openvpn&#34;&gt;Openwrt下的OpenVPN&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;openvpn server&lt;/strong&gt;
参考：&lt;a href=&#34;http://www.zhihu.com/question/21751217&#34;&gt;http://www.zhihu.com/question/21751217&lt;/a&gt;
openwrt 下有2个openvpn server：一个是openvpn-openssl，另一个是openvpn-polarssl，配置方法是通用的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;openvpn client&lt;/strong&gt;
参考：
&lt;a href=&#34;http://wiki.openwrt.org/doc/howto/vpn.client.openvpn.tun&#34;&gt;http://wiki.openwrt.org/doc/howto/vpn.client.openvpn.tun&lt;/a&gt;
&lt;a href=&#34;http://blog.jqian.net/post/openwrt-openvpn.html&#34;&gt;http://blog.jqian.net/post/openwrt-openvpn.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;软件：
- openwrt 开源的路由器固件
- openvpn VPN客户端
- obfsproxy 流量混淆工具
- pdnsd 域名解析服务&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;opkg update
opkg install openvpn openvpn-easy-rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;二-openvpn-server-client配置实践&#34;&gt;二、OpenVPN Server+Client配置实践&lt;/h1&gt;

&lt;p&gt;参考：
&lt;a href=&#34;http://www.williamlong.info/archives/3814.html&#34;&gt;http://www.williamlong.info/archives/3814.html&lt;/a&gt;
&lt;a href=&#34;http://www.cnblogs.com/sunzhouyi/archive/2010/08/11/1797088.html&#34;&gt;http://www.cnblogs.com/sunzhouyi/archive/2010/08/11/1797088.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;0-环境版本&#34;&gt;0.环境版本&lt;/h2&gt;

&lt;p&gt;服务端
- Ubuntu 14.10
- openvpn 2.3.2
- dnsmasq DNS服务器&lt;/p&gt;

&lt;p&gt;客户端1
- 硬件版本：newifi mini y1
- 固件版本：newifi/openwrt-ramips-mt7620-Lenovo-y1-squashfs-sysupgrade.bin
链接：&lt;a href=&#34;http://pan.baidu.com/s/1jG308fG&#34;&gt;http://pan.baidu.com/s/1jG308fG&lt;/a&gt; 密码：kncx
- Openvpn 2.3.6&lt;/p&gt;

&lt;p&gt;客户端2
- 系统：Windows 10
- Openvpn 2.3.6&lt;/p&gt;

&lt;h2 id=&#34;1-认证机构配置&#34;&gt;1.认证机构配置&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-vpn&#34;&gt;# vars
set HOME=E:\OpenVPN\easy-rsa

set KEY_COUNTRY=CN
set KEY_PROVINCE=HN
set KEY_CITY=SHAOYANG
set KEY_ORG=ZKKJ
set KEY_EMAIL=info@zkkj168.com
set KEY_CN=ZKKJ
set KEY_NAME=ZKKJ
set KEY_OU=ZKKJ
set PKCS11_MODULE_PATH=ZKKJ
set PKCS11_PIN=1234

# ./build-ca
Common Name (eg, your name or your server&#39;s hostname) []:ZKKJ-CA

# build-key-server server
Common Name : server
Password : 空

# build-key clientzk
Common Name : clinetzk/clineths/clientzx/clientnc
Password : 空
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;服务端配置-server-ovpn-server-conf&#34;&gt;服务端配置 server.ovpn/server.conf&lt;/h2&gt;

&lt;p&gt;server.conf(zkkj)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vpn&#34;&gt;port 1194
proto udp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh1024.pem
server 10.8.0.0 255.255.0.0
push &amp;quot;redirect-gateway def1&amp;quot;
;push &amp;quot;dhcp-option DNS 8.8.8.8&amp;quot;
;push &amp;quot;dhcp-option DNS 8.8.4.4&amp;quot;
ifconfig-pool-persist ipp.txt
duplicate-cn
keepalive 10 120
client-to-client
comp-lzo
comp-noadapt
fragment 1300
mssfix 1300
sndbuf 204800
rcvbuf 204800
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
verb 3
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-vpn&#34;&gt;server 10.7.0.0 255.255.0.0

#如果可以让VPN Client之间相互访问直接通过openvpn程序转发，
#不用发送到tun或者tap设备后重新转发，优化Client to Client的访问效率
client-to-client

#如果Client使用的CA的Common Name有重复了，或者说客户都使用相同的CA

duplicate-cn

#下面表示每10秒通过VPN的Control通道ping对方，如果连续120秒无法ping通，
#认为连接丢失，并重新启动VPN，重新连接
#（对于mode server模式下的openvpn不会重新连接）。
keepalive 10 120
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动服务端
openvpn &amp;ndash;config server.conf&lt;/p&gt;

&lt;h2 id=&#34;dns配置&#34;&gt;DNS配置&lt;/h2&gt;

&lt;p&gt;为OpenVPN客户端搭建DNS&lt;/p&gt;

&lt;p&gt;这就是为什么我们要安装dnsmasq的原因，打开它的配置文件。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@delta:/etc/openvpn# nano /etc/dnsmasq.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;定位到这行:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#listen-address=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把它换成下面这样:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;listen-address=127.0.0.1,10.8.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后定位到这行:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#bind-interfaces
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把&amp;rdquo;#&amp;ldquo;删了:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind-interfaces
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了让dnsmasq应用这些更改，我们重启它:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@delta:/etc/openvpn# service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;开启linux路由功能&#34;&gt;开启Linux路由功能&lt;/h2&gt;

&lt;p&gt;我们希望在一些机器或虚拟机上运行的OpneVPN有路由的功能，这意味着要开启IP转发。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#为了打开它，我们用root账户键入
echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/ip_forward
#为了让这个设置重启也好用，我们编辑 /etc/sysctl.conf:
vim /etc/sysctl.conf

#编辑这行:
#net.ipv4.ip_forward=1
#把&amp;quot;#&amp;quot;删了:
net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还需要激活一些iptables相关的规则（待测试是否必要）:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-iptables&#34;&gt;# eth1为服务器外网网卡名称，10.7.0.0是vpn网段
iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -s 10.7.0.0/24 -j ACCEPT
iptables -A FORWARD -j REJECT
iptables -t nat -A POSTROUTING -s 10.7.0.0/24 -o eth1 -j MASQUERADE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;服务器端防火墙设置加入了以下规则（待测试是否必要）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-iptables&#34;&gt;iptables -I INPUT 1 -p udp --dport 443 -j ACCEPT
iptables -I INPUT 1 -p tcp --dport 443 -j ACCEPT
iptables -I INPUT   -i tap0 -j ACCEPT
iptables -I FORWARD -i tap0 -j ACCEPT
iptables -I INPUT   -i br-lan -j ACCEPT
iptables -I FORWARD -i br-lan -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;openwrt客户端配置&#34;&gt;OpenWrt客户端配置&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;复制openvpn-zkkj.conf到/etc/openvpn/my-vpn.conf
复制ca.crt client.cert client.key到/etc/openvpn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;openvpn-zkkj.conf(zkkj)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-vpn&#34;&gt;client
dev tun
comp-lzo
comp-noadapt
fragment 1300
sndbuf 204800
rcvbuf 204800
verb 3

ca /etc/openvpn/ca.ca
cert /etc/openvpn/client.cert
key /etc/openvpn/client.key


comp-lzo yes
;remote 110.52.103.89
remote vpn.zkkj168.com
;route-gateway 192.168.99.1
;redirect-gateway
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开机启动&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## 常规方式，系统——启动项——openvpn启动
cp /tmp/etc/openvpn-zkkj.conf /etc/openvpn/my-vpn.conf
登录luci后台，服务——openvpn——custom_config启动打勾

## 制定方式，系统——启动项——自定文本
## start openvpn
/usr/sbin/openvpn --cd /etc/openvpn --config my-vpn.conf --daemon
## end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OpenWRT Ping不通问题&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-iptables&#34;&gt;iptables -I FORWARD -o br-lan -j ACCEPT # 允许 br-lan 端口流量被转发
iptables -I FORWARD -o tun0 -j ACCEPT # 允许 tun0 端口流量被转发
iptables -t nat -I POSTROUTING -o tun0 -j MASQUERADE #tun0 出口的流量 SNAT 出去

iptables -I FORWARD -o br-lan -j ACCEPT
iptables -I FORWARD -o tun0 -j ACCEPT
iptables -t nat -A POSTROUTING -s 192.168.99.0/24 -j MASQUERADE
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;openwrt端口映射&#34;&gt;OpenWRT端口映射&lt;/h2&gt;

&lt;p&gt;1.服务UPNP开启
2.网络——防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-iptables&#34;&gt;ipc1

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5540

IP 192.168.99.50, port 1554 位于 lan



ipc1web

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5580

IP 192.168.99.50, port 80 位于 lan



ipc1ser

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5800

IP 192.168.99.50, port 8000 位于 lan



ipc2rtsp

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5541

IP 192.168.99.51, port 1554 位于 lan



ipc2web

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5581

IP 192.168.99.51, port 80 位于 lan



ipc2ser

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5801

IP 192.168.99.51, port 8000 位于 lan



ipc3

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5542

IP 192.168.99.52, port 1554 位于 lan



ipc3web

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5582

IP 192.168.99.52, port 80 位于 lan



ipc3ser

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5802

IP 192.168.99.52, port 8000 位于 lan



ipc4rtsp

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5543

IP 192.168.99.53, port 1554 位于 lan



ipc4web

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5583

IP 192.168.99.53, port 80 位于 lan



ipc4ser

IPv4-TCP, UDP
来自 所有主机 位于 wan
通过 所有路由地址 at port 5803

IP 192.168.99.53, port 8000 位于 lan
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OpenWrt硬件选择及系统基础环境配置经验总结</title>
      <link>https://cio.anasit.com/cookbook/network/OpenWrt%E7%A1%AC%E4%BB%B6%E9%80%89%E6%8B%A9%E5%8F%8A%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 21 Oct 2015 15:05:51 +0800</pubDate>
      
      <guid>https://cio.anasit.com/cookbook/network/OpenWrt%E7%A1%AC%E4%BB%B6%E9%80%89%E6%8B%A9%E5%8F%8A%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</guid>
      <description>

&lt;h1 id=&#34;一-基础环境选择及搭建&#34;&gt;一、基础环境选择及搭建&lt;/h1&gt;

&lt;h2 id=&#34;1-支持硬件设备列表&#34;&gt;1.支持硬件设备列表：&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.openwrt.org/toh/start#supported.hardware.-.router.type&#34;&gt;http://wiki.openwrt.org/toh/start#supported.hardware.-.router.type&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最佳：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;联想 newifi mini 1200M AC 智能无线路由器 双频千兆穿墙
&lt;a href=&#34;http://www.right.com.cn/FORUM/thread-150726-1-1.html&#34;&gt;newifi mini纯净版OpenWRT兼容内核固件，集成rt2860v2、mt76x2e驱动&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;小米路由器mini：
&lt;a href=&#34;http://ngiux.com/miwifi-mini-openwrt-openvpn/&#34;&gt;http://ngiux.com/miwifi-mini-openwrt-openvpn/&lt;/a&gt;
&lt;a href=&#34;http://blog.csdn.net/huyaoyu/article/details/42810383&#34;&gt;http://blog.csdn.net/huyaoyu/article/details/42810383&lt;/a&gt;
&lt;a href=&#34;http://www.tianruosk.com/technical/yjwj/1904.html&#34;&gt;http://www.tianruosk.com/technical/yjwj/1904.html&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可选：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TL-WR842ND
&lt;a href=&#34;http://wiki.openwrt.org/toh/tp-link/tl-wr842nd&#34;&gt;http://wiki.openwrt.org/toh/tp-link/tl-wr842nd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TP-LINK WR703N
&lt;a href=&#34;http://www.jb51.net/network/113081.html&#34;&gt;http://www.jb51.net/network/113081.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;番茄dualwan：
&lt;a href=&#34;http://detail.1688.com/offer/1277654521.html&#34;&gt;http://detail.1688.com/offer/1277654521.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-系统安装&#34;&gt;2.系统安装&lt;/h2&gt;

&lt;p&gt;设备选型：Newifi Mini Y1版本
系统选型：小云xCloud V2.1.0.5900
安装工具：路由助手 1.0.13&lt;/p&gt;

&lt;h2 id=&#34;3-开启ssh权限&#34;&gt;3.开启SSH权限&lt;/h2&gt;

&lt;p&gt;高级设置-系统-管理权，分别设置Lan/Wan两个ssh访问权限&lt;/p&gt;

&lt;h2 id=&#34;4-登录配置opkg&#34;&gt;4.登录配置opkg&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;libc安装&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /tmp

wget http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/base/libc_0.9.33.2-1_ramips_24kec.ipk

## 安装libc
opkg install libc_0.9.33.2-1_ramips_24kec.ipk
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh 192.168.99.1
opkg update #更新报错了，考虑更换软件源
#软件源参考，同款xCloud可用源http://www.enjoydiy.com/3199.html
vim /etc/opkg.conf
## opkg.conf start
dest root /opt
dest ram /tmp
lists_dir ext /var/opkg-lists
option overlay_root /overlay

arch all 100
arch ramips_24kec 200
arch ramips 300
arch mips 400
arch unkown 500

src/gz barrier_breaker_base http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/base
src/gz barrier_breaker_luci http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/luci
src/gz barrier_breaker_management http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/management
src/gz barrier_breaker_oldpackages http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/oldpackages
src/gz barrier_breaker_packages http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/packages
src/gz barrier_breaker_routing http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/routing
src/gz barrier_breaker_telephony http://mirrors.ustc.edu.cn/openwrt/barrier_breaker/14.07/ramips/mt7620a/packages/telephony
## opkg.conf end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-opkg常用命令&#34;&gt;5.opkg常用命令&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Package Manipulation:
        update                  Update list of available packages
        upgrade &amp;lt;pkgs&amp;gt;          Upgrade packages
        install &amp;lt;pkgs&amp;gt;          Install package(s)
        configure &amp;lt;pkgs&amp;gt;        Configure unpacked package(s)
        remove &amp;lt;pkgs|regexp&amp;gt;    Remove package(s)
        flag &amp;lt;flag&amp;gt; &amp;lt;pkgs&amp;gt;      Flag package(s)
         &amp;lt;flag&amp;gt;=hold|noprune|user|ok|installed|unpacked (one per invocation)

Informational Commands:
        list                    List available packages
        list-installed          List installed packages
        list-upgradable         List installed and upgradable packages
        list-changed-conffiles  List user modified configuration files
        files &amp;lt;pkg&amp;gt;             List files belonging to &amp;lt;pkg&amp;gt;
        search &amp;lt;file|regexp&amp;gt;    List package providing &amp;lt;file&amp;gt;
        find &amp;lt;regexp&amp;gt;           List packages whose name or description matches
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## 打印帮助
opkg -h

## 更新资源列表
opkg update

## 更新软件版本
opkg upgrade openvpn

## 列出已安装的包
opkg list-installed

## find后安装线上软件
opkg find shadowsocks*
opkg find openvpn*
opkg install openvpn-nossl

## wget后安装本地ipk包
opkg install /tmp/wget_openvpn.ipk
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;二-进阶配置&#34;&gt;二、进阶配置&lt;/h1&gt;

&lt;h2 id=&#34;系统清理&#34;&gt;系统清理&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;## opkg  清理
rm -r /tmp/opkg-*

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>